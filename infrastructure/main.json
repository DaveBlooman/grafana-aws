{
  "Description": "A Grafana stack for AWS",
  "Parameters": {
    "ImageId": {
      "Description": "The AMI to use for this component - YUM compliant required",
      "Type": "String",
      "Default": "ami-bff32ccc"
    },
    "InstanceType": {
      "Description": "The size of the EC2 instances",
      "Default": "t2.medium",
      "Type": "String"
    },
    "VpcId": {
      "Description": "The Id of the VPC to attach the environment to",
      "Type": "AWS::EC2::VPC::Id",
      "Default": "vpc-"
    },
    "KeyName": {
      "Description": "Name of existing EC2 keypair to enable SSH access to the created instances",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "PublicSubnets": {
      "Description": "The id of public subnet 1",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "RDSComponentSecurityGroup": {
      "Description": "The id of the RDS SecurityGroup",
      "Type": "String",
      "Default": "sg-"
    }
  },
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "LoadBalancerSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "SecurityGroupIngress": [
          {
            "ToPort": "80",
            "IpProtocol": "tcp",
            "FromPort": "80",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupDescription": "An ELB group allowing access only to from the corresponding component"
      }
    },
    "ComponentElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": {
          "Ref": "PublicSubnets"
        },
        "Listeners": [
          {
            "InstancePort": "3000",
            "Protocol": "tcp",
            "InstanceProtocol": "tcp",
            "LoadBalancerPort": "80"
          }
        ],
        "CrossZone": false,
        "SecurityGroups": [
          {
            "Ref": "LoadBalancerSecurityGroup"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": 3,
          "Interval": 10,
          "Timeout": 5,
          "UnhealthyThreshold": 5,
          "Target": "HTTP:3000/login"
        }
      }
    },
    "ComponentSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "SecurityGroupIngress": [
          {
            "ToPort": "3000",
            "IpProtocol": "tcp",
            "FromPort": "3000",
            "SourceSecurityGroupId": {
              "Ref": "LoadBalancerSecurityGroup"
            }
          },
          {
            "FromPort": 22,
            "ToPort": 22,
            "IpProtocol": "tcp",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "VpcId": {
          "Ref": "VpcId"
        },
        "GroupDescription": "A component security group allowing access only from the corresponding ELB"
      }
    },
    "ComponentLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "KeyName": {
          "Ref": "KeyName"
        },
        "IamInstanceProfile": {
          "Ref": "ComponentInstanceProfile"
        },
        "ImageId": {
          "Ref": "ImageId"
        },
        "SecurityGroups": [
          {
            "Ref": "ComponentSecurityGroup"
          },
          {
            "Ref": "RDSComponentSecurityGroup"
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#cloud-config",
                "\n",
                "runcmd:\n",
                "- yum update -y\n",
                "- yum install -y wget\n",
                "- yum install -y https://grafanarel.s3.amazonaws.com/builds/grafana-2.6.0-1.x86_64.rpm\n",
                "- service grafana-server start\n"
              ]
            ]
          }
        }
      }
    },
    "ComponentAutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "PauseTime": "PT0S",
          "MaxBatchSize": 1,
          "MinInstancesInService": 1
        }
      },
      "Properties": {
        "LoadBalancerNames": [
          {
            "Ref": "ComponentElasticLoadBalancer"
          }
        ],
        "MinSize": 1,
        "MaxSize": 1,
        "LaunchConfigurationName": {
          "Ref": "ComponentLaunchConfiguration"
        },
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "Tags": [
          {
            "PropagateAtLaunch": true,
            "Value": "grafana",
            "Key": "Name"
          }
        ]
      }
    },
    "ComponentScalingPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "ScalingAdjustment": 1,
        "AutoScalingGroupName": {
          "Ref": "ComponentAutoScalingGroup"
        },
        "AdjustmentType": "ChangeInCapacity"
      }
    },
    "ComponentInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "ComponentRole"
          }
        ]
      }
    },
    "GrafanaComponentPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "cloudwatch:*"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "cloudformation:Describe*"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow"
            },
            {
              "Action": [
                "ec2:Describe*"
              ],
              "Resource": [
                "*"
              ],
              "Effect": "Allow"
            }
          ]
        },
        "PolicyName": "GrafanaComponentPolicy",
        "Roles": [
          {
            "Ref": "ComponentRole"
          }
        ]
      }
    },
    "ComponentRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    }
  }
}
